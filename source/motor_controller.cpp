#include <stdio.h>

#include "fsl_debug_console.h"

#include "canlight.h"
#include "motor_controller.h"

using namespace BSP;

void motor_controller_handler() {
	can::CANlight& can = can::CANlight::StaticClass();
	can::CANlight::frame frame = can.readrx(0);

	PRINTF("[can_receive] ");

	switch(frame.id - MOTOR_CONTROLLER_CAN_OFFSET) {
	case BROADCAST_MESSAGE_TEMPERATURES_1:
		PRINTF("TEMPERATURES #1");
		break;

	case BROADCAST_MESSAGE_TEMPERATURES_2:
		PRINTF("TEMPERATURES #2");
		break;

	case BROADCAST_MESSAGE_TEMPERATURES_3:
		PRINTF("TEMPERATURES #3");
		break;

	case BROADCAST_MESSAGE_ANALOG_INPUT_VOLTAGES:
		PRINTF("ANALOG INPUT VOLTAGES");
		break;

	case BROADCAST_MESSAGE_DIGITAL_INPUT_STATUS:
		PRINTF("DIGITAL INPUT STATUS");
		break;

	case BROADCAST_MESSAGE_MOTOR_POSITION_INFORMATION:
		PRINTF("MOTOR POSITION INFORMATION");
		break;

	case BROADCAST_MESSAGE_CURRENT_INFORMATION:
		PRINTF("CURRENT INFORMATION");
		break;

	case BROADCAST_MESSAGE_VOLTAGE_INFORMATION:
		PRINTF("VOLTAGE INFORMATION");
		break;

	case BROADCAST_MESSAGE_FLUX_INFORMATION:
		PRINTF("FLUX INFORMATION");
		break;

	case BROADCAST_MESSAGE_INTERNAL_VOLTAGES:
		PRINTF("INTERNAL VOLTAGES");
		break;

	case BROADCAST_MESSAGE_INTERNAL_STATES:
		PRINTF("INTERNAL STATES");
		break;

	case BROADCAST_MESSAGE_FAULT_CODES:
		PRINTF("FAULT CODES");
		break;

	case BROADCAST_MESSAGE_TORQUE_INFORMATION:
		PRINTF("TORQUE INFORMATION");
		break;

	case BROADCAST_MESSAGE_MODULATION_INDEX_INFORMATION:
		PRINTF("MODULATION INDEX INFORMATION");
		break;

	case BROADCAST_MESSAGE_FIRMWARE_INFORMATION:
		PRINTF("FIRMWARE");
		break;

	case BROADCAST_MESSAGE_DIAGNOSTIC_DATA:
		PRINTF("DIAGNOSTIC DATA");
		break;

	default:
		PRINTF("ID: 0x%lX", frame.id - MOTOR_CONTROLLER_CAN_OFFSET);
		break;
	}

	PRINTF(" | 0x%lX", *((uint32_t *)frame.data));

	PRINTF("\n");
}
